variables:
  GIT_DEPTH: 0
  NUGET_MIRLE_STANDARD_LIBRARIES: http://gitlab.mirle.com.tw/api/v4/projects/93/packages/nuget/index.json
  NUGET_READ_USER: nugetreadtoken
  NUGET_READ_TOKEN: 92Y2UyyFoaUHyMzSZBaD
  SONAR_KEY: test
  PACKAGE_REGISTRY_URL: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic


stages:
  - build
  - deploy


build-merge-request:
  stage: build
  tags:
    - windows-docker
  image: mirle/sonarscan-dotnetframework4.8:latest
  script:
    - dotnet nuget add source ${NUGET_MIRLE_STANDARD_LIBRARIES} `
        --name gitlab `
        --username "nugetreadtoken" `
        --password "92Y2UyyFoaUHyMzSZBaD" `
        --store-password-in-clear-text
    - SonarScanner.MSBuild.exe begin `
        /k:"$SONAR_KEY" `
        /d:sonar.host.url=${env:SONAR_HOST_URL} `
        /d:sonar.login=${env:SONAR_LOGIN} `
        /d:sonar.sourceEncoding=UTF-8 `
        /d:sonar.qualitygate.wait=true
    - nuget restore T1JUMAK0.sln
    - msbuild T1JUMAK0.sln /p:Configuration=Release
    - SonarScanner.MSBuild.exe end `
        /d:sonar.login=${env:SONAR_LOGIN}
    - Get-ChildItem .\Mirle.ASRS.WCS\bin\Release -recurse -include *.pdb | remove-item
  artifacts:
    paths:
      - Mirle.ASRS.WCS/bin/Release
    expire_in: 4 hrs
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"


build-regular:
  stage: build
  tags:
    - windows-docker
  image: mirle/sonarscan-dotnetframework4.8:latest
  script:
    - dotnet nuget add source ${NUGET_MIRLE_STANDARD_LIBRARIES} `
        --name gitlab `
        --username "nugetreadtoken" `
        --password "92Y2UyyFoaUHyMzSZBaD" `
        --store-password-in-clear-text
    - SonarScanner.MSBuild.exe begin `
        /k:"$SONAR_KEY" `
        /d:sonar.host.url=${env:SONAR_HOST_URL} `
        /d:sonar.login=${env:SONAR_LOGIN} `
        /d:sonar.sourceEncoding=UTF-8 `
        /v:${CI_COMMIT_SHORT_SHA}
    - nuget restore T1JUMAK0.sln
    - msbuild T1JUMAK0.sln /p:Configuration=Release
    - SonarScanner.MSBuild.exe end `
        /d:sonar.login=${env:SONAR_LOGIN}
    - Get-ChildItem .\Mirle.ASRS.WCS\bin\Release -recurse -include *.pdb | remove-item
  artifacts:
    paths:
      - Mirle.ASRS.WCS/bin/Release
    expire_in: 4 hrs
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_NAME == "master"'


build-release:
  stage: build
  tags:
    - windows-docker
  image: mirle/sonarscan-dotnetframework4.8:latest
  script:
    - dotnet nuget add source ${NUGET_MIRLE_STANDARD_LIBRARIES} `
        --name gitlab `
        --username "nugetreadtoken" `
        --password "92Y2UyyFoaUHyMzSZBaD" `
        --store-password-in-clear-text
    - nuget restore T1JUMAK0.sln
    - msbuild T1JUMAK0.sln /p:Configuration=Release
    - Get-ChildItem .\Mirle.ASRS.WCS\bin\Release -recurse -include *.pdb | remove-item
  artifacts:
    paths:
      - Mirle.ASRS.WCS/bin/Release
    expire_in: 4 hrs
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web" && $CI_COMMIT_TAG'


upload-package:
  stage: deploy
  tags:
    - windows-docker
  image: mirle/sonarscan-dotnetframework4.8:latest
  script:
    - Set-Variable PACKAGE_NAME Mirle.ASRS.WCS
    - Set-Variable PACKAGE_FILE ${PACKAGE_NAME}_${CI_COMMIT_TAG}.zip
    - Set-Variable URL ${PACKAGE_REGISTRY_URL}/${PACKAGE_NAME}/${CI_COMMIT_TAG}/${PACKAGE_FILE}
    - Compress-Archive -Path Mirle.ASRS.WCS\bin\Release -DestinationPath ${PACKAGE_FILE}
    - dir
    - echo $PACKAGE_FILE
    - echo $URL
#    - 'curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ${PACKAGE_FILE} ${URL}'
    - Invoke-RestMethod -Headers @{ "JOB-TOKEN"="$CI_JOB_TOKEN" } -InFile ${PACKAGE_FILE} -uri "${URL}" -Method put
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web" && $CI_COMMIT_TAG'
